//created on: 2015-01-09
package pl.poznan.put.fc

//list any import classes here.
import pl.poznan.put.fc.Question;
import pl.poznan.put.fc.Fact;
import pl.poznan.put.fc.Answer;


rule "Rodzaj problemu"

    when
        //conditions
    then
        String[] answers = {"Układ kierowniczy", "Skrzynia biegów"};
        String[] facts = {"problem_kierownica", "problem_biegi"};
        Fact m = (new Question("Podaj rodzaj problemu", answers, facts)).ask();
        if(m != null)
        	insert(m);
end

rule "Problem z kierownicą"
    //include attributes such as "salience" here...
    when
        Fact(fact == "problem_kierownica");
    then
        String[] answers = {"Tak", "Nie"};
        String[] facts = {"utrudnione_kierowanie", "nie_utrudnione_kierowanie"};
        Fact m = (new Question("Czy występuje utrudnienie w kierowaniu?", answers, facts)).ask();
        if(m != null)
        	insert(m);
        	
        String[] facts2 = {"ciezki_powrot", "nie_ciezki_powrot"};
        Fact m2 = (new Question("Czy występuje ciężki powrót kierownicy do pozycji centralnej?", answers, facts2)).ask();
        if (m != null)
        	insert(m2);
end

rule "Czy luz w kierownicy"
	when
		Fact(fact == "Kierownica_A");
	then
		String[] answers = {"Tak", "Nie"};
        String[] facts = {"luz", "nie_luz"};
        Fact m = (new Question("Czy występuje luz podczas kręcenia kierownicą?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end

rule "Czy hałas v1"
	when
		Fact(fact == "Kierownica_B");
	then
		String[] answers = {"Tak", "Nie"};
        String[] facts = {"halas1", "nie_halas1"};
        Fact m = (new Question("Czy występuje hałas?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end

rule "Typ halas 1"
	when
		Fact(fact == "Kierownica_C");
	then
		String[] answers = {"Syczący", "Brzęczący"};
        String[] facts = {"halas1_syczy", "halas1_brzeczy"};
        Fact m = (new Question("Hałas jest syczący czy brzęczący?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end

rule "Wibracje i szarpanie"
	when
		Fact(fact == "Kierownica_D");
	then
		String[] answers = {"Tak", "Nie"};
        String[] facts = {"wibracje_szarpanie", "nie_wibracje_szarpanie"};
        Fact m = (new Question("Czy występują wibracje i szarpanie?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end

rule "Stan drazkow"
	when
		Fact(fact == "Kierownica_E");
	then
		String[] answers = {"Dobry", "Zły"};
        String[] facts = {"drazki_dobry", "drazki_zly"};
        Fact m = (new Question("Jaki jest stan drążków poprzecznych?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end

rule "Halas lub szarpanie"
	when
		Fact(fact == "Kierownica_F");
	then
		String[] answers = {"Hałas", "Szarpanie"};
        String[] facts = {"halas2", "szarpanie"};
        Fact m = (new Question("Występuje hałas czy szarpanie?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end

rule "Sciaga na bok czy halasuje?"
	when
		Fact(fact == "Kierownica_G");
	then
		String[] answers = {"Ściąga na bok", "Hałasuje"};
        String[] facts = {"sciaga", "halas3"};
        Fact m = (new Question("Ściąga samochód na bok czy hałasuje?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end

rule "Stan opon"
	when
		Fact(fact == "Kierownica_H");
	then
		String[] answers = {"Nadmiernie zużyte", "Normalny"};
        String[] facts = {"opony_zuzyte", "opony_normalne"};
        Fact m = (new Question("Oceń stan opon.", answers, facts)).ask();
        if(m != null)
        	insert(m);
end

rule "Stan przednich tarcz"
	when
		Fact(fact == "Kierownica_J");
	then
		String[] answers = {"Tak", "Nie"};
        String[] facts = {"tarcze_pogiete", "tarcze_ok"};
        Fact m = (new Question("Czy przednie tarcze są pogięte?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end


rule "Typ halas 3"
	when
		Fact(fact == "Kierownica_I");
	then
		String[] answers = {"Syczący", "Brzęczący"};
        String[] facts = {"halas3_syczy", "halas3_brzeczy"};
        Fact m = (new Question("Hałas jest syczący czy brzęczący?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end
		
rule "Predkosc utrudniona"
	when
		Fact(fact == "Kierownica_L");
	then
		String[] answers = {"Mała prędkość", "Duża prędkość", "Niezależnie od prędkości"};
        String[] facts = {"predkosc_mala", "predkosc_duza", "predkosc_zawsze"};
        Fact m = (new Question("Przy jakiej prędkości występuje utrudnienie w kierowaniu?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end

rule "Stan plynu ukladu"
	when
		Fact(fact == "Kierownica_K");
	then
		String[] answers = {"Tak", "Nie"};
        String[] facts = {"plyn_ok", "plyn_nieok"};
        Fact m = (new Question("Czy poziom płynu układu kierowniczego jest powyżej minimum?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end

// Odpowiedzi
rule "Cel Dolej plyn"
	when
		Fact(fact == "cel_dolej_plyn")
	then
		String a = "Należy dolać płynu do układu kierowniczego.\n" +
		"Poruszanie się pojazdem bez odpowiedniego poziomu płynu w układzie\nmoże doprowadzić do trwałego uszkodzenia układu kierowniczego";
		new Answer(a);
end

rule "Cel Wymien pompe kier"
	when
		Fact(fact == "cel_wymien_pompe_2")
	then
		String a = "Należy wymienić pompę wspomagania układu kierowniczego.\n" +
		"Pompa jest głównym elementem układu wspomagania, który zmniejsza opór z jakim obraca się kierownica.\n" +
		"Niedziałąjąca pompa skutkuje brakiem wspomagania, przez co skręt kół jest wykonywany w całości przy pomocy siły mięśni kierującego";
		new Answer(a);
end

rule "Cel obudowa kolumny"
	when
		Fact(fact == "cel_obudowa_kolumny")
	then
		String a = "Należy sprawdzić obudowę kolumny kierowniczej\n" +
		"Obudowa kolumny znajduje się wewnątrz pojazdu, przez nią łączona jest kierownica z układem kierowania\n" +
		"Utrudnienie kierowania spowodowane jest przemieszczeniem obudowy kolumny kierowniczej, która ociera się o kierownicę.";
		new Answer(a);
end


rule "Cel pasek pompy"
	when
		Fact(fact == "cel_pasek_pompy")
	then
		String a = "Należy sprawdzić pasek pompy wspomagania układu kierowniczego\n" +
		"Pasek jest odpowiedzialny za dostarczanie energii z silnika\n" +
		"Prawdopodobna usterka paska skutkuje problemami z układem kierowniczym";
		new Answer(a);
end

rule "Cel wymien przekladnie"
	when
		Fact(fact == "cel_wymien_przekladnie")
	then
		String a = "Należy wymienić lub zregenerować przekładnie kierowniczą\n" +
		"Przekładnia kierownicza służy do przełożenia siły rąk na siłę osiową skręcającą kołami\n" +
		"Poruszanie się z niesprawną przekładnią jest bardzo niebezpieczne!";
		new Answer(a);
end

rule "Cel wymien tarcze przednie"
	when
		Fact(fact == "cel_wymien_tarcze_przednie")
	then
		String a = "Należy wymienić przednie tarcze hamulca\n" +
		"Tarcze hamulca są odpowiedzialne za zwiększenie siły tarcia i przejęcie energii kół podczas hamowania\n" +
		"Poruszanie się z niesprawnymi tarczami hamulców jest bardzo niebezpieczne!";
		new Answer(a);
end

rule "Cel przytwierdz przewod elastyczny"
	when
		Fact(fact == "cel_przytwierdz_przewod_elastyczny")
	then
		String a = "Należy przytwierdzić przewód elastyczny\n" +
		"Przewód elastyczny znajduje się w układzie hamulcowym\n" +
		"Brzęczenia wskazuje na obijanie się przewodu wlastycznego o inne elementy. Sugerujemy przymocowanie przewodu.";
		new Answer(a);
end

rule "Cel wymien przewod elastyczny"
	when
		Fact(fact == "cel_wymien_przewod_elastyczny")
	then
		String a = "Należy wymienić przewód elastyczny\n" +
		"Syczenie wskazuje na nieszczelność przewodu elastycznego.\n" +
		"Poruszanie się z nieszczelnym układem hamulcowym jest bardzo niebezpieczne i może skutkować brakiem hamulców.";
		new Answer(a);
end

rule "Cel ustaw zbieznosc"
	when
		Fact(fact == "cel_ustaw_zbieznosc")
	then
		String a = "Należy ustawić zbieżność kół\n" +
		"Problemy z kierowaniem nie są związane z mechaniką, lecz z brakiem wyważenia kół.\n";
		new Answer(a);
end

rule "Cel wymien pompe"
	when
		Fact(fact == "cel_wymien_pompe")
	then
		String a = "Należy wymienić pompę wspomagania układu kierowniczego\n" +
		"Problemy z kierowanie, ciężki powrót oraz szarpanie wskazuje na problemu z pompą wspomagania. Należy ją wymienić na nowy egzemplarz.\n";
		new Answer(a);
end

rule "Cel wymien wal"
	when
		Fact(fact == "cel_wymien_wal")
	then
		String a = "Hałas sugeruje uszkodzenie elementów wału pośredniego. Należy wymienić cały wał pośredni.";
		new Answer(a);
end

rule "Cel odpowietrz pompe"
	when
		Fact(fact == "cel_odpowietrz_pompe")
	then
		String a = "Występowanie luzu oraz szarpnięć i wibracji wskazuje na zapowietrzenie pompy wspomagania.\nOdpowietrzenie rozwiąże problemy.";
		new Answer(a);
end

rule "Cel wymien poprzeczne"
	when
		Fact(fact == "cel_wymien_poprzeczne")
	then
		String a = "Luzy i zły stan drążków poprzecznych klasyfikuje je do wymiany.";
		new Answer(a);
end

rule "Cel dokrec poprzeczne"
	when
		Fact(fact == "cel_dokrec_poprzeczne")
	then
		String a = "Luzy oraz hałasy spowodowane są złym montażem drążkó poprzecznych.\nNależy je wymontować, jeszcze raz sprawdzić stan i zamontować ponownie we właściwy sposób.";
		new Answer(a);
end

rule "Cel docisnij wal"
	when
		Fact(fact == "cel_docisnij_wal")
	then
		String a = "Hałas sugeruje problem z połaczeniem wału pośredniego. Mocne dociśnięcie elementu powinno rozwiązać problemy";
		new Answer(a);
end

rule "Cel lozyska"
	when
		Fact(fact == "cel_lozyska")
	then
		String a = "Problem z powrotem do pozycji centralnej oraz odczuwalny luz jest spowodowany zużyciem łożysk kół. Zalecana jest wymiana.";
		new Answer(a);
end

rule "Cel zbieznosc"
	when
		Fact(fact == "cel_zbieznosc")
	then
		String a = "Problemy z kierowaniem nie są związane z mechaniką, lecz z brakiem wyważenia kół.";
		new Answer(a);
end

/***
biegi
***/
rule "Problem z biegami"

	when
		Fact(fact == "problem_biegi");
    then
        String[] answers = {"Tak", "Nie"};
        String[] facts = {"problem_sprzeglo", "nie_problem_sprzeglo"};
        Fact m = (new Question("Czy występuje problem ze sprzęgłem?", answers, facts)).ask();
        if(m != null)
        	insert(m);
        	
        String[] facts2 = {"halas_biegi", "nie_halas_biegi"};
        Fact m2 = (new Question("Czy słyszysz hałas?", answers, facts2)).ask();
        if (m2 != null)
        	insert(m2);
end

rule "Typ halasu sprzegla"
	when
			Fact(fact == "Biegi_A");
	then
		String[] answers = {"Klekot", "Hałas z łożyska"};
        String[] facts = {"klekot_sprzeglo", "halas_lozysko"};
        Fact m = (new Question("Jakiego rodzaju hałas słyszysz? Klekotanie czy specyficzny hałas łożyska", answers, facts)).ask();
        if(m != null)
        	insert(m);
end
	
rule "Szarpanie lub poslizg sprzegla"
	when
			Fact(fact == "Biegi_A1");
	then
		String[] answers = {"Poślizg", "Szarpanie"};
        String[] facts = {"poslizg_sprzeglo", "szarpanie_sprzeglo"};
        Fact m = (new Question("Z klekotaniem wiąże się pośliz sprzęgła albo szarpanie. Czy które z nich występuje", answers, facts)).ask();
        if(m != null)
        	insert(m);
end	
	
rule "Czy wyciek oleju 1"
	when
			Fact(fact == "Biegi_F");
	then
		String[] answers = {"Tak", "Nie"};
        String[] facts = {"wyciek_oleju_sprzeglo", "nie_wyciek_oleju_sprzeglo"};
        Fact m = (new Question("Z szarpaniem sprzęgła czasami wiąże się z wyciekiem oleju. Czy zauważyłeś może wyciek oleju?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end	

rule "Czy przegrzanie okladzin tarczy sprzegla"
	when
			Fact(fact == "Biegi_E");
	then
			String[] answers = {"Tak", "Nie"};
			String[] facts = {"przegrzanie", "nie_przegrzanie"};
			Fact m = (new Question("Poślizg może wiązać sie z przegrzaniem okładzin. Czy okładziny tarczy sprzegła są przegrzane?", answers, facts)).ask();
			if(m != null)
        	insert(m);
end	

rule "Czy pierscien dociskowy odksztalcony"
	when
			Fact(fact == "Biegi_E1");
	then
			String[] answers = {"Tak", "Nie"};
			String[] facts = {"pierscien_odksztalcony", "nie_pierscien_odksztalcony"};
			Fact m = (new Question("Jeśli nie przegrzanie okładzin to może uszkodzenie pierścienia dociskowego. Czy pierścień dociskowy jest odkształcony?", answers, facts)).ask();
			if(m != null)
        	insert(m);
end	

rule "Czy szarpanie sprzeglo"
	when
			Fact(fact == "Biegi_B");
	then
			String[] answers = {"Tak", "Nie"};
			String[] facts = {"szarpanie_sprzeglo", "nie_szarpanie_sprzeglo"};
			Fact m = (new Question("Czy wyczuwasz szarpaniem gdy dusisz sprzęgło?", answers, facts)).ask();
			if(m != null)
        	insert(m);
end	

rule "Poslizg sprzeglo"
	when
			Fact(fact == "Biegi_B1");
	then
			String[] answers = {"Tak", "Nie"};
			String[] facts = {"poslizg_sprzeglo", "nie_poslizg_sprzeglo"};
			Fact m = (new Question("Czy wyczuwasz oprócz szarpanie, również poślizg sprzęgła?", answers, facts)).ask();
			if(m != null)
        	insert(m);
end	

rule "Niepelna czy nadmierna"
	when
			Fact(fact == "Biegi_B2");
	then
			String[] answers = {"Niepełne wyłączanie", "Nadmierna siła"};
			String[] facts = {"niepelne", "nadmierna"};
			Fact m = (new Question("Jeśli nie szarpanie to musi dochodzić do niepełnego wyłączania sprzęgła lub potrzebna jest nadmierna siła, aby wciśnąć do końca sprzęgło?", answers, facts)).ask();
			if(m != null)
        	insert(m);
end	

rule "Na jakim biegu?"
	when
			Fact(fact == "Biegi_C");
	then
			String[] answers = {"Na luzie", "Na wstecznym", "Na każdym biegu"};
			String[] facts = {"biegi_neutralny", "biegi_wsteczny", "biegi_wszystkie"};
			Fact m = (new Question("Na jakim rodzaju biegu dochodzi do problemu?", answers, facts)).ask();
			if(m != null)
        	insert(m);
end	

rule "Czy kola zebate zuzyte"
	when
			Fact(fact == "Biegi_C1");
	then
			String[] answers = {"Tak", "Nie"};
			String[] facts = {"zebate_zuzyte", "nie_zebate_zuzyte"};
			Fact m = (new Question("Czy jakiekolwiek koło zębate jest zużyte?", answers, facts)).ask();
			if(m != null)
        	insert(m);
end	

rule "Czy synchronizatoe zuzyty"
	when
			Fact(fact == "Biegi_C2");
	then
			String[] answers = {"Tak", "Nie"};
			String[] facts = {"synchro_zuzyte", "nie_synchro_zuzyte"};
			Fact m = (new Question("Czy widzisz ślady zużycia synchronizatora 1 i 2 biegu?", answers, facts)).ask();
			if(m != null)
        	insert(m);
end	

rule "Czy poziom olej"
	when
			Fact(fact == "Biegi_C3");
	then
			String[] answers = {"Tak", "Nie"};
			String[] facts = {"poziom_olej_biegi", "nie_poziom_olej_biegi"};
			Fact m = (new Question("Czy poziom oleju jest prawidłowy?", answers, facts)).ask();
			if(m != null)
        	insert(m);
end	

rule "Czy samoczynne wylaczenie"
	when
			Fact(fact == "Biegi_D");
	then
			String[] answers = {"Tak", "Nie"};
			String[] facts = {"samoczynne", "nie_samoczynne"};
			Fact m = (new Question("Czy biegi samoczynnie się wyłączają?", answers, facts)).ask();
			if(m != null)
        	insert(m);
end	

rule "Czy wyciek oleju 2"
	when
			Fact(fact == "Biegi_D1");
	then
		String[] answers = {"Tak", "Nie"};
        String[] facts = {"wyciek_oleju_biegi", "nie_wyciek_oleju_biegi"};
        Fact m = (new Question("Czy zauważyłeś może wyciek oleju?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end	

rule "Gdzie wyciek oleju"
	when
			Fact(fact == "Biegi_G");
	then
		String[] answers = {"Sprzęgło", "Skrzynia"};
        String[] facts = {"wyciek_oleju_sprzeglo", "wyciek_skrzynia"};
        Fact m = (new Question("Czy wyciek oleju idzie do sprzęgła czy wyciek jest w środkowej części skrzyni biegów?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end	

rule "Czy wibracje biegi"
	when
			Fact(fact == "Biegi_H");
	then
		String[] answers = {"Tak", "Nie"};
        String[] facts = {"wibracje_biegi", "nie_wibracje_biegi"};
        Fact m = (new Question("Czy wyczuwasz wibracje?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end	

rule "Czy kola wywazone"
	when
			Fact(fact == "Biegi_I");
	then
		String[] answers = {"Tak", "Nie"};
        String[] facts = {"wywazone", "nie_wywazone"};
        Fact m = (new Question("Wibracje mogą być spowodowane brakiem wyważenia kół. Czy koła zostały wyważone ostatnio?", answers, facts)).ask();
        if(m != null)
        	insert(m);
end	

//Odpowiedzi
rule "Cel wymien_sprezyne"
	when
		Fact(fact == "cel_wymien_sprezyne");
	then
		new Answer("Hałas łożyska spowodowany jest osłabioną sprężyną powrotu, którą należy wymienić.");
end

rule "Cel wymiana_tarcza"
	when
		Fact(fact == "cel_wymiana_tarcza");
	then
		new Answer("Klekoczący hałas wraz z szarapaniem wskazuję na usterki elementów tarczy sprzęgła lub koła zamachowego. Wyciek oleju wskazuję na tarczę sprzęgła. Należy ją wymienić.");
end

rule "Cel wymiana_zamachowe"
	when
		Fact(fact == "cel_wymiana_zamachowe");
	then
		new Answer("Klekoczący hałas wraz z szarapaniem wskazuję na usterki elementów tarczy sprzęgła lub koła zamachowego. Brak wycieku oleju wskazuję na koło zamachowe. Należy ją wymienić.");
end

rule "Cel ochlodzenie_okladzin"
	when
		Fact(fact == "cel_ochlodzenie_okladzin");
	then
		new Answer("Przegrzanie okładzin tarczy sprzęgła może powodować poślizg sprzęgła oraz słyszalny klekot. Rozwiązaniem jest odczekanie, aż okładziny się schłodzą. Kierowca powinnien zmienić nawyki jazdy.");
end

rule "Cel wymiana_dociskowy"
	when
		Fact(fact == "cel_wymiana_dociskowy");
	then
		new Answer("Odkształcony pierścień nie nadaję się do dalszego użytku ani nawet do naprawy. Musi zostać wymieniony.");
end

rule "Cel wymiana_tarcza_2"
	when
		Fact(fact == "cel_wymiana_tarcza_2");
	then
		new Answer("Poślizg sprzęgła, klekotanie oraz dobry pierścień dociskowy wskazują na uszkodzoną tarczę sprzęgła. Należy wymienić element.");
end

rule "Cel wymiana_zamachowe_2"
	when
		Fact(fact == "cel_wymiana_zamachowe_2");
	then
		new Answer("Występowanie poślizgu oraz szarpania sugeruję odkształcenie koła zamachowego. Część powinna zostać wymieniona na nową.");
end

rule "Cel wymiana_walek"
	when
		Fact(fact == "cel_wymiana_walek");
	then
		new Answer("Doszło do zużycia wielowypustów wałka napędowego. Należy wymięnić cały wałek napędowy.");
end

rule "Cel nasmarować_walek"
	when
		Fact(fact == "cel_nasmarować_walek");
	then
		new Answer("Szarpanie oraz niepełnie wyłączanie sprzęgła spowodowane jest brakiem lub slabym nasmarowaniem wałka widełek. Element należy wymontować nasmarować i ponowanie zamontować.");
end

rule "Cel przesmaruj_sterowanie"
	when
		Fact(fact == "cel_przesmaruj_sterowanie");
	then
		new Answer("Wciśnięcie sprzęgła wymaga nadmiernej siły, jeżeli układ sterowania zakleszczył się. W tej sytuacji należy przesmatować i wyluzować układ.");
end

rule "Cel wymien_zebate"
	when
		Fact(fact == "cel_wymien_zebate");
	then
		new Answer("Wystarczy wymienić zużyte koła zębate, aby pozbyć się hałasu.");
end

rule "Cel wymien_wyciskowe"
	when
		Fact(fact == "cel_wymien_wyciskowe");
	then
		new Answer("Jeżeli koła zębate są w dobrym stanie, hałas na biegu neutralnym spowodowany jest przez zmęczone łożysko wyciskowe sprzęgła.");
end

rule "Cel wymien_synchro"
	when
		Fact(fact == "cel_wymien_synchro");
	then
		new Answer("Hałas na wstecznym biegu spowodowany był zużytym synchronizatorem biegu 1-ego i 2-ego.");
end

rule "Cel wymien_talerzowe"
	when
		Fact(fact == "cel_wymien_talerzowe");
	then
		new Answer("Hałas na wstecznym biegu spowodowany był przez zużyte koło talerzowe.");
end

rule "Cel wymien_lozyska"
	when
		Fact(fact == "cel_wymien_lozyska");
	then
		new Answer("Jeśli hałas występował tylko na określonym biegu należy wymienić łozysko danego biegu. W innym wypadku zaleca się wymiane wszystkich łożysk biegów.");
end

rule "Cel dolej_olej"
	when
		Fact(fact == "cel_dolej_olej");
	then
		new Answer("Należy uzupełnić olej do odpowiedniego poziomu. Jazda z mniejszą ilością oleju niż podaje producent może powodować wiele kosztownych uszkodzeń zespołu silnika i skrzyni biegów.");
end

rule "Cel wymiana_wlaczania_biegow"
	when
		Fact(fact == "cel_wymiana_wlaczania_biegow");
	then
		new Answer("Problem spowodowany jest usterkami widełek włączania biegu. Widełki te można naprawić lub wymienić na nowe w zależności od zużycia.");
end

rule "Cel wymien_tuleje"
	when
		Fact(fact == "cel_wymien_tuleje");
	then
		new Answer("Wyciek oleju do sprzęgła spowodowany jest nieszczelnością tuleji prowadzącej łozyska wyciskowego. Element należy wymienić na nową.");
end

rule "Cel napraw_obudowe"
	when
		Fact(fact == "cel_napraw_obudowe");
	then
		new Answer("Należy zlokalizować dokładne miejsce wycieku w środkowej części skrzyni biegów. Uszkodzena obudowę można naprawić.");
end

rule "Cel wymien_przegub"
	when
		Fact(fact == "cel_wymien_przegub");
	then
		new Answer("Występowanie problemy skrzyni biegów bez wcześniej wymienionych objawów wskazuje na zużycie przegubów półosi. Należy wymienić element.");
end

rule "Cel wymien_napedowe"
	when
		Fact(fact == "cel_wymien_napedowe");
	then
		new Answer("Wibracje przy wyważonych kołach spowodowane są przez zgiętą półoś napędową. Wymien element");
end

rule "Cel wywaz_kola"
	when
		Fact(fact == "cel_wywaz_kola");
	then
		new Answer("Wibracje spowodowane są brakiem wyważenia kół. Należy je wyważyć.");
end


